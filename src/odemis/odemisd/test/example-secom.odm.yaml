SECOM: {
    class: Microscope,
    role: secom,
}

Spectra: {
    class: lle.FakeLLE,
    role: light,
    init: {
        port: "/dev/ttyLLE",
        # source name -> 99% low, 25% low, centre, 25% high, 99% high wavelength in m
        sources: {"red": [615.e-9, 625.e-9, 633.e-9, 640.e-9, 650.e-9],
                  "green": [525.e-9, 540.e-9, 550.e-9, 555.e-9, 560.e-9],
                  "cyan": [455.e-9, 465.e-9, 475.e-9, 485.e-9, 495.e-9],
                  "UV": [375.e-9, 390.e-9, 400.e-9, 402.e-9, 405.e-9],
                  "yellow": [565.e-9, 570.e-9, 575.e-9, 580.e-9, 595.e-9],
                  "blue": [420.e-9, 430.e-9, 438.e-9, 445.e-9, 455.e-9],
                  "teal": [495.e-9, 505.e-9, 513.e-9, 520.e-9, 530.e-9],
                 }
    },
    affects: [Clara],
}

"SEM ExtXY": {
    class: simsem.SimSEM,
    role: null,
    init: {
           image: "songbird-sim-sem.h5", # any large 16 bit image is fine
#           drift_period: 5, # s, comment out to disable drift
    },
    children: {scanner: "EBeam ExtXY",
               detector0: "SED ExtXY",
    }
}

"EBeam ExtXY": {
    # Internal child of SimSEM, so no class
    role: e-beam,
    init: {},
    properties: {
        resolution: [512, 512], # px
        dwellTime: 10.e-6, # s
        horizontalFoV: 1.e-6, # m, used to test the properties setting
    },
    affects: ["SED ExtXY", "Clara"] # affects the CCD in case of cathodoluminescence
}

"SED ExtXY": { # aka ETD
    # Internal child of SimSEM, so no class
    role: se-detector,
    init: {},
}

"Nikon Super Duper": {
    class: static.OpticalLens,
    role: lens,
    init: {mag: 40.0}, # ratio
    affects: [Clara]
}

"MultiBand Fixed Filter": {
    class: static.LightFilter,
    role: filter,
    init: {band: [[430.e-9, 480.e-9], [520.e-9, 600.e-9]]}, # m,m
    affects: [Clara]
}

# Axes: X is horizontal on screen (going left->right), physical left->right of sample when user is inserting the sample
#       Y is vertical going top-> bottom, physical: far->close from user looking from the top
Clara: {
    class: andorcam2.FakeAndorCam2,
    role: ccd,
    init: {device: 0},
    properties: {
        exposureTime: 0.3, # s
    }
}

"Sample Stage": {
    class: simulated.Stage,
    role: stage,
    init: {axes: [x, y]},
    affects: [Clara, "EBeam ExtXY"],
    properties: {
        speed: {x: 0.1, y: 0.1} #m/s
    }
}
# Use 2 MultiplexActuators to separate the axes of the PIGCS over different roles
"SEM-Optical Alignment": {
    class: actuator.MultiplexActuator,
    role: align,
    affects: [Clara],
    dependencies: {"l": PIGCS, "r": PIGCS},
    init: {
        axes_map: {"l": "l", "r": "r"},
#        inverted: ["l"]
    },
    properties: {
        speed: {'l': 0.001, 'r': 0.001} #m/s
    }
}

# Z axis of focus: decreasing means "closer to the sample"
"OpticalZ actuator": {
    class: actuator.MultiplexActuator,
    role: focus,
    affects: [Clara],
    dependencies: {"z": PIGCS},
    init: {
        axes_map: {"z": "z"}
    },
    properties: {
        speed: {'z': 0.01} #m/s
    },
    metadata: {
        FAV_POS_ACTIVE: {'z': 0.06},
    }
}

# PI E-861 jumpers (. = off):
# L = 1234.6..
# R = 123..6..
# Z = 12.4.6..

PIGCS: {
    class: pigcs.FakeBus,
    role: null,
    init: {
        port: "/dev/ttyPIE",
        axes: {"l": [1, 1, False], "r": [2, 1, False], "z": [3, 1, False]} # axis -> controller, channel, closed-loop?
    },
}

